[{"c:\\Development\\xerini-code-test\\src\\App.tsx":"1","c:\\Development\\xerini-code-test\\src\\app\\services\\data\\users.ts":"2","c:\\Development\\xerini-code-test\\src\\app\\stores\\_root_store.ts":"3","c:\\Development\\xerini-code-test\\src\\app\\services\\UserService.ts":"4","c:\\Development\\xerini-code-test\\src\\app\\stores\\UserStore.ts":"5","c:\\Development\\xerini-code-test\\src\\app\\services\\agent.ts":"6","c:\\Development\\xerini-code-test\\src\\features\\login\\login-page.tsx":"7","c:\\Development\\xerini-code-test\\src\\features\\login\\login-form.tsx":"8","c:\\Development\\xerini-code-test\\src\\app\\layout\\application-shell.tsx":"9","c:\\Development\\xerini-code-test\\src\\app\\stores\\CommonStore.ts":"10","c:\\Development\\xerini-code-test\\src\\app\\layout\\private-route.tsx":"11","c:\\Development\\xerini-code-test\\src\\features\\projects\\projects-page.tsx":"12","c:\\Development\\xerini-code-test\\src\\index.tsx":"13","c:\\Development\\xerini-code-test\\src\\app\\layout\\public-route.tsx":"14","c:\\Development\\xerini-code-test\\src\\features\\dashboard\\dashboard-page.tsx":"15","c:\\Development\\xerini-code-test\\src\\app\\common\\navigation-bar.tsx":"16","c:\\Development\\xerini-code-test\\src\\features\\team\\team-page.tsx":"17","c:\\Development\\xerini-code-test\\src\\features\\reports\\reports-page.tsx":"18"},{"size":1633,"mtime":1608892953891,"results":"19","hashOfConfig":"20"},{"size":1466,"mtime":1608839258499,"results":"21","hashOfConfig":"20"},{"size":518,"mtime":1608842953730,"results":"22","hashOfConfig":"20"},{"size":1224,"mtime":1608844513906,"results":"23","hashOfConfig":"20"},{"size":1035,"mtime":1608892977920,"results":"24","hashOfConfig":"20"},{"size":1543,"mtime":1608831993692,"results":"25","hashOfConfig":"20"},{"size":1079,"mtime":1608892122534,"results":"26","hashOfConfig":"20"},{"size":2543,"mtime":1608883297087,"results":"27","hashOfConfig":"20"},{"size":794,"mtime":1608893128034,"results":"28","hashOfConfig":"20"},{"size":837,"mtime":1608895192840,"results":"29","hashOfConfig":"20"},{"size":848,"mtime":1608889950644,"results":"30","hashOfConfig":"20"},{"size":263,"mtime":1608892932843,"results":"31","hashOfConfig":"20"},{"size":703,"mtime":1608890173193,"results":"32","hashOfConfig":"20"},{"size":860,"mtime":1608891718229,"results":"33","hashOfConfig":"20"},{"size":271,"mtime":1608892892310,"results":"34","hashOfConfig":"20"},{"size":1676,"mtime":1608895015910,"results":"35","hashOfConfig":"20"},{"size":252,"mtime":1608894953139,"results":"36","hashOfConfig":"20"},{"size":260,"mtime":1608894963042,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"1qvze2q",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c:\\Development\\xerini-code-test\\src\\App.tsx",["76","77","78"],"import {observer} from 'mobx-react-lite';\r\nimport React, {Fragment, useContext, useState} from 'react';\r\nimport './App.css';\r\nimport {StoreContext} from './app/stores/_root_store';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\nimport LoginPage from \"./features/login/login-page\";\r\nimport PrivateRoute from \"./app/layout/private-route\";\r\nimport DashboardPage from \"./features/dashboard/dashboard-page\";\r\nimport ProjectsPage from \"./features/projects/projects-page\";\r\nimport PublicRoute from \"./app/layout/public-route\";\r\nimport PageNotFound from './app/layout/page-not-found';\r\n\r\nfunction App() {\r\n\r\n    const store = useContext(StoreContext);\r\n    const [hasError, setError] = useState();\r\n\r\n    return (\r\n        <Fragment>\r\n            <Switch>\r\n                <PublicRoute exact path={'/signin'} restricted={true} component={LoginPage}/>\r\n                <PrivateRoute exact path={'/'} component={DashboardPage}/>\r\n                <Route\r\n                    path={'/(.+)'}\r\n                    render={() => (\r\n                        <Fragment>\r\n                            <Switch>\r\n                                <PrivateRoute exact path={'/dashboard'} component={DashboardPage}/>\r\n                                <PrivateRoute exact path={'/projects'} component={ProjectsPage}/>\r\n                                <Route component={PageNotFound}/>\r\n                            </Switch>\r\n                        </Fragment>\r\n                    )}/>\r\n            </Switch>\r\n            {/* <ApplicationShell></ApplicationShell>*/}\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default withRouter(observer(App));\r\n","c:\\Development\\xerini-code-test\\src\\app\\services\\data\\users.ts",[],"c:\\Development\\xerini-code-test\\src\\app\\stores\\_root_store.ts",["79"],"c:\\Development\\xerini-code-test\\src\\app\\services\\UserService.ts",[],"c:\\Development\\xerini-code-test\\src\\app\\stores\\UserStore.ts",[],"c:\\Development\\xerini-code-test\\src\\app\\services\\agent.ts",["80"],"import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\n\r\n\r\n//initialze default settings\r\naxios.defaults.baseURL = \"\";\r\n\r\n//initialze the request and response interceptors\r\naxios.interceptors.response.use(undefined, (error: any) => {\r\n  //Handle network error\r\n  if (error.message.include(\"Network Error\") && !error.response) {\r\n    console.log(\r\n      \"Network error. End-user is not connected to the internet or the api is not avilable or doesnt exists\"\r\n    );\r\n  }\r\n\r\n  //Handle requested resource is not found.\r\n  if (error.status == \"404\") {\r\n    console.log(\"API cannot find the requested resource\");\r\n  }\r\n\r\n  //Handle authentication error\r\n  if (error.status === \"401\") {\r\n    console.log(\"User is unauthorized\");\r\n  }\r\n\r\n  //Handle server error\r\n\r\n  if (error.status === \"500\") {\r\n    console.log(\"Server error\");\r\n  }\r\n\r\n  throw error.response;\r\n});\r\n\r\naxios.interceptors.request.use(\r\n  (request: AxiosRequestConfig) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n    return request;\r\n  },\r\n  (error: any) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\n\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\nexport const  requests = {\r\n    get : (path:string)=>axios.get(path).then(responseBody),\r\n    post : (path:string,body:{}) => axios.post(path, body).then(responseBody),\r\n    put : (path:string,body:{}) => axios.put(path, body).then(responseBody),\r\n    del : (path:string) => axios.delete(path).then(responseBody),\r\n\r\n}\r\n","c:\\Development\\xerini-code-test\\src\\features\\login\\login-page.tsx",["81","82"],"c:\\Development\\xerini-code-test\\src\\features\\login\\login-form.tsx",["83"],"c:\\Development\\xerini-code-test\\src\\app\\layout\\application-shell.tsx",[],"c:\\Development\\xerini-code-test\\src\\app\\stores\\CommonStore.ts",[],"c:\\Development\\xerini-code-test\\src\\app\\layout\\private-route.tsx",["84"],"c:\\Development\\xerini-code-test\\src\\features\\projects\\projects-page.tsx",[],"c:\\Development\\xerini-code-test\\src\\index.tsx",[],"c:\\Development\\xerini-code-test\\src\\app\\layout\\public-route.tsx",[],"c:\\Development\\xerini-code-test\\src\\features\\dashboard\\dashboard-page.tsx",[],"c:\\Development\\xerini-code-test\\src\\app\\common\\navigation-bar.tsx",["85"],"c:\\Development\\xerini-code-test\\src\\features\\team\\team-page.tsx",[],"c:\\Development\\xerini-code-test\\src\\features\\reports\\reports-page.tsx",[],{"ruleId":"86","severity":1,"message":"87","line":15,"column":11,"nodeType":"88","messageId":"89","endLine":15,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":16,"column":12,"nodeType":"88","messageId":"89","endLine":16,"endColumn":20},{"ruleId":"86","severity":1,"message":"91","line":16,"column":22,"nodeType":"88","messageId":"89","endLine":16,"endColumn":30},{"ruleId":"86","severity":1,"message":"92","line":4,"column":9,"nodeType":"88","messageId":"89","endLine":4,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":17,"column":20,"nodeType":"95","messageId":"96","endLine":17,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":8,"column":17,"nodeType":"99","endLine":8,"endColumn":76},{"ruleId":"100","severity":1,"message":"101","line":12,"column":21,"nodeType":"99","endLine":12,"endColumn":103},{"ruleId":"100","severity":1,"message":"101","line":37,"column":21,"nodeType":"99","endLine":37,"endColumn":95},{"ruleId":"86","severity":1,"message":"102","line":4,"column":9,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":23,"column":28,"nodeType":"99","endLine":23,"endColumn":117},"@typescript-eslint/no-unused-vars","'store' is assigned a value but never used.","Identifier","unusedVar","'hasError' is assigned a value but never used.","'setError' is assigned a value but never used.","'UserService' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'StateStore' is defined but never used."]