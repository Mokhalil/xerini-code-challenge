[{"c:\\Development\\xerini-code-test\\src\\App.tsx":"1","c:\\Development\\xerini-code-test\\src\\app\\services\\data\\users.ts":"2","c:\\Development\\xerini-code-test\\src\\app\\stores\\_root_store.ts":"3","c:\\Development\\xerini-code-test\\src\\app\\services\\UserService.ts":"4","c:\\Development\\xerini-code-test\\src\\app\\stores\\UserStore.ts":"5","c:\\Development\\xerini-code-test\\src\\app\\services\\agent.ts":"6","c:\\Development\\xerini-code-test\\src\\features\\login\\login-page.tsx":"7","c:\\Development\\xerini-code-test\\src\\features\\login\\login-form.tsx":"8"},{"size":691,"mtime":1608844531658,"results":"9","hashOfConfig":"10"},{"size":1466,"mtime":1608839258499,"results":"11","hashOfConfig":"10"},{"size":518,"mtime":1608842953730,"results":"12","hashOfConfig":"10"},{"size":1224,"mtime":1608844513906,"results":"13","hashOfConfig":"10"},{"size":880,"mtime":1608843917400,"results":"14","hashOfConfig":"10"},{"size":1543,"mtime":1608831993692,"results":"15","hashOfConfig":"10"},{"size":1087,"mtime":1608847612246,"results":"16","hashOfConfig":"10"},{"size":2543,"mtime":1608847467885,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1qvze2q",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"c:\\Development\\xerini-code-test\\src\\App.tsx",["35"],"c:\\Development\\xerini-code-test\\src\\app\\services\\data\\users.ts",[],"c:\\Development\\xerini-code-test\\src\\app\\stores\\_root_store.ts",["36"],"c:\\Development\\xerini-code-test\\src\\app\\services\\UserService.ts",[],"c:\\Development\\xerini-code-test\\src\\app\\stores\\UserStore.ts",[],"c:\\Development\\xerini-code-test\\src\\app\\services\\agent.ts",["37"],"import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\r\n\r\n\r\n//initialze default settings\r\naxios.defaults.baseURL = \"\";\r\n\r\n//initialze the request and response interceptors\r\naxios.interceptors.response.use(undefined, (error: any) => {\r\n  //Handle network error\r\n  if (error.message.include(\"Network Error\") && !error.response) {\r\n    console.log(\r\n      \"Network error. End-user is not connected to the internet or the api is not avilable or doesnt exists\"\r\n    );\r\n  }\r\n\r\n  //Handle requested resource is not found.\r\n  if (error.status == \"404\") {\r\n    console.log(\"API cannot find the requested resource\");\r\n  }\r\n\r\n  //Handle authentication error\r\n  if (error.status === \"401\") {\r\n    console.log(\"User is unauthorized\");\r\n  }\r\n\r\n  //Handle server error\r\n\r\n  if (error.status === \"500\") {\r\n    console.log(\"Server error\");\r\n  }\r\n\r\n  throw error.response;\r\n});\r\n\r\naxios.interceptors.request.use(\r\n  (request: AxiosRequestConfig) => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    request.headers.Authorization = `Bearer ${token}`;\r\n    return request;\r\n  },\r\n  (error: any) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n\r\n\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\nexport const  requests = {\r\n    get : (path:string)=>axios.get(path).then(responseBody),\r\n    post : (path:string,body:{}) => axios.post(path, body).then(responseBody),\r\n    put : (path:string,body:{}) => axios.put(path, body).then(responseBody),\r\n    del : (path:string) => axios.delete(path).then(responseBody),\r\n\r\n}\r\n","c:\\Development\\xerini-code-test\\src\\features\\login\\login-page.tsx",["38","39"],"c:\\Development\\xerini-code-test\\src\\features\\login\\login-form.tsx",["40"],{"ruleId":"41","severity":1,"message":"42","line":9,"column":12,"nodeType":"43","messageId":"44","endLine":9,"endColumn":20},{"ruleId":"41","severity":1,"message":"45","line":4,"column":9,"nodeType":"43","messageId":"44","endLine":4,"endColumn":20},{"ruleId":"46","severity":1,"message":"47","line":17,"column":20,"nodeType":"48","messageId":"49","endLine":17,"endColumn":22},{"ruleId":"50","severity":1,"message":"51","line":8,"column":17,"nodeType":"52","endLine":8,"endColumn":84},{"ruleId":"53","severity":1,"message":"54","line":12,"column":21,"nodeType":"52","endLine":12,"endColumn":103},{"ruleId":"53","severity":1,"message":"54","line":37,"column":21,"nodeType":"52","endLine":37,"endColumn":95},"@typescript-eslint/no-unused-vars","'hasError' is assigned a value but never used.","Identifier","unusedVar","'UserService' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md"]